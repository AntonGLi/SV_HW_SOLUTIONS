#! /c/Source/iverilog-install/bin/vvp
:ivl_version "12.0 (devel)" "(s20150603-1539-g2693dd32b)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision + 0;
:vpi_module "C:\iverilog\lib\ivl\system.vpi";
:vpi_module "C:\iverilog\lib\ivl\vhdl_sys.vpi";
:vpi_module "C:\iverilog\lib\ivl\vhdl_textio.vpi";
:vpi_module "C:\iverilog\lib\ivl\v2005_math.vpi";
:vpi_module "C:\iverilog\lib\ivl\va_math.vpi";
:vpi_module "C:\iverilog\lib\ivl\v2009.vpi";
S_0000016914e02410 .scope package, "$unit" "$unit" 2 1;
 .timescale 0 0;
S_0000016914e04030 .scope module, "tb" "tb" 3 1;
 .timescale 0 0;
P_0000016914e041c0 .param/l "allow_push_when_full_with_pop" 1 3 5, +C4<00000000000000000000000000000001>;
P_0000016914e041f8 .param/l "fifo_depth" 1 3 4, +C4<00000000000000000000000000000101>;
P_0000016914e04230 .param/l "fifo_width" 1 3 3, +C4<00000000000000000000000000001000>;
v0000016914e840a0_0 .var "clk", 0 0;
v0000016914e84960_0 .net "empty", 0 0, L_0000016914e25b80;  1 drivers
v0000016914e834c0_0 .net "full", 0 0, L_0000016914e26130;  1 drivers
v0000016914e85040_0 .var "pop", 0 0;
v0000016914e83ba0_0 .var "push", 0 0;
v0000016914e839c0_0 .net "read_data", 7 0, L_0000016914e260c0;  1 drivers
v0000016914e85180_0 .var "rst", 0 0;
v0000016914e83880_0 .var "write_data", 7 0;
S_0000016914e15960 .scope begin, "$ivl_for_loop1" "$ivl_for_loop1" 3 81, 3 81 0, S_0000016914e04030;
 .timescale 0 0;
v0000016914e03070_0 .var/2s "i", 31 0;
E_0000016914dfdf70 .event posedge, v0000016914e03250_0;
S_0000016914e15af0 .scope begin, "$ivl_for_loop2" "$ivl_for_loop2" 3 102, 3 102 0, S_0000016914e04030;
 .timescale 0 0;
v0000016914e03b10_0 .var/2s "i", 31 0;
S_0000016914e0d9e0 .scope begin, "$ivl_for_loop3" "$ivl_for_loop3" 3 111, 3 111 0, S_0000016914e04030;
 .timescale 0 0;
v0000016914e03ed0_0 .var/2s "i", 31 0;
S_0000016914e0db70 .scope module, "monitor" "fifo_monitor" 3 33, 4 1 0, S_0000016914e04030;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "clk";
    .port_info 1 /INPUT 1 "rst";
    .port_info 2 /INPUT 1 "push";
    .port_info 3 /INPUT 1 "pop";
    .port_info 4 /INPUT 8 "write_data";
    .port_info 5 /INPUT 8 "read_data";
    .port_info 6 /INPUT 1 "empty";
    .port_info 7 /INPUT 1 "full";
P_0000016914dfd370 .param/l "allow_push_when_full_with_pop" 0 4 5, +C4<00000000000000000000000000000001>;
P_0000016914dfd3a8 .param/l "depth" 0 4 4, +C4<00000000000000000000000000000101>;
P_0000016914dfd3e0 .param/l "width" 0 4 3, +C4<00000000000000000000000000001000>;
v0000016914e03250_0 .net "clk", 0 0, v0000016914e840a0_0;  1 drivers
v0000016914e03f70_0 .net "empty", 0 0, L_0000016914e25b80;  alias, 1 drivers
v0000016914e03570_0 .net "full", 0 0, L_0000016914e26130;  alias, 1 drivers
v0000016914e03d90_0 .net "pop", 0 0, v0000016914e85040_0;  1 drivers
v0000016914e03110_0 .net "push", 0 0, v0000016914e83ba0_0;  1 drivers
v0000016914e03750_0 .var/queue "queue", 8;
v0000016914e031b0_0 .net "read_data", 7 0, L_0000016914e260c0;  alias, 1 drivers
v0000016914e03390_0 .net "rst", 0 0, v0000016914e85180_0;  1 drivers
v0000016914e032f0_0 .var "was_reset", 0 0;
v0000016914e03430_0 .net "write_data", 7 0, v0000016914e83880_0;  1 drivers
S_0000016914cb65d0 .scope begin, "$ivl_for_loop0" "$ivl_for_loop0" 4 103, 4 103 0, S_0000016914e0db70;
 .timescale 0 0;
v0000016914e037f0_0 .var/2s "i", 31 0;
S_0000016914cb6760 .scope module, "rtl" "flip_flop_fifo_empty_full_optimized" 3 25, 5 1 0, S_0000016914e04030;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "clk";
    .port_info 1 /INPUT 1 "rst";
    .port_info 2 /INPUT 1 "push";
    .port_info 3 /INPUT 1 "pop";
    .port_info 4 /INPUT 8 "write_data";
    .port_info 5 /OUTPUT 8 "read_data";
    .port_info 6 /OUTPUT 1 "empty";
    .port_info 7 /OUTPUT 1 "full";
P_0000016914e04510 .param/l "depth" 0 5 3, +C4<00000000000000000000000000000101>;
P_0000016914e04548 .param/l "max_ptr" 1 5 19, +C4<100>;
P_0000016914e04580 .param/l "pointer_width" 1 5 18, +C4<00000000000000000000000000000011>;
P_0000016914e045b8 .param/l "width" 0 5 3, +C4<00000000000000000000000000001000>;
L_0000016914e260c0 .functor BUFZ 8, L_0000016914e846e0, C4<00000000>, C4<00000000>, C4<00000000>;
L_0000016914e261a0 .functor XNOR 1, v0000016914e837e0_0, v0000016914e850e0_0, C4<0>, C4<0>;
L_0000016914e25b80 .functor AND 1, L_0000016914e84820, L_0000016914e261a0, C4<1>, C4<1>;
L_0000016914e25e90 .functor NOT 1, L_0000016914e261a0, C4<0>, C4<0>, C4<0>;
L_0000016914e26130 .functor AND 1, L_0000016914e84820, L_0000016914e25e90, C4<1>, C4<1>;
v0000016914e03bb0_0 .net *"_ivl_0", 7 0, L_0000016914e846e0;  1 drivers
v0000016914e03c50_0 .net *"_ivl_14", 0 0, L_0000016914e25e90;  1 drivers
v0000016914e03890_0 .net *"_ivl_2", 3 0, L_0000016914e83e20;  1 drivers
L_0000016914ec0088 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0000016914e03610_0 .net *"_ivl_5", 0 0, L_0000016914ec0088;  1 drivers
v0000016914e034d0_0 .net "clk", 0 0, v0000016914e840a0_0;  alias, 1 drivers
v0000016914e036b0 .array "data", 4 0, 7 0;
v0000016914e03930_0 .net "empty", 0 0, L_0000016914e25b80;  alias, 1 drivers
v0000016914e039d0_0 .net "equal_ptrs", 0 0, L_0000016914e84820;  1 drivers
v0000016914e03a70_0 .net "full", 0 0, L_0000016914e26130;  alias, 1 drivers
v0000016914e03cf0_0 .net "pop", 0 0, v0000016914e85040_0;  alias, 1 drivers
v0000016914e03e30_0 .net "push", 0 0, v0000016914e83ba0_0;  alias, 1 drivers
v0000016914e83d80_0 .var "rd_ptr", 2 0;
v0000016914e850e0_0 .var "rd_ptr_odd_circle", 0 0;
v0000016914e84640_0 .net "read_data", 7 0, L_0000016914e260c0;  alias, 1 drivers
v0000016914e84be0_0 .net "rst", 0 0, v0000016914e85180_0;  alias, 1 drivers
v0000016914e84460_0 .net "same_circle", 0 0, L_0000016914e261a0;  1 drivers
v0000016914e84780_0 .var "wr_ptr", 2 0;
v0000016914e837e0_0 .var "wr_ptr_odd_circle", 0 0;
v0000016914e83920_0 .net "write_data", 7 0, v0000016914e83880_0;  alias, 1 drivers
E_0000016914dfea70 .event posedge, v0000016914e03390_0, v0000016914e03250_0;
L_0000016914e846e0 .array/port v0000016914e036b0, L_0000016914e83e20;
L_0000016914e83e20 .concat [ 3 1 0 0], v0000016914e83d80_0, L_0000016914ec0088;
L_0000016914e84820 .cmp/eq 3, v0000016914e84780_0, v0000016914e83d80_0;
    .scope S_0000016914cb6760;
T_0 ;
    %wait E_0000016914dfea70;
    %load/vec4 v0000016914e84be0_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_0.0, 8;
    %pushi/vec4 0, 0, 3;
    %assign/vec4 v0000016914e84780_0, 0;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0000016914e837e0_0, 0;
    %jmp T_0.1;
T_0.0 ;
    %load/vec4 v0000016914e03e30_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_0.2, 8;
    %load/vec4 v0000016914e84780_0;
    %cmpi/e 4, 0, 3;
    %jmp/0xz  T_0.4, 4;
    %pushi/vec4 0, 0, 3;
    %assign/vec4 v0000016914e84780_0, 0;
    %load/vec4 v0000016914e837e0_0;
    %inv;
    %assign/vec4 v0000016914e837e0_0, 0;
    %jmp T_0.5;
T_0.4 ;
    %load/vec4 v0000016914e84780_0;
    %addi 1, 0, 3;
    %assign/vec4 v0000016914e84780_0, 0;
T_0.5 ;
T_0.2 ;
T_0.1 ;
    %jmp T_0;
    .thread T_0;
    .scope S_0000016914cb6760;
T_1 ;
    %wait E_0000016914dfea70;
    %load/vec4 v0000016914e84be0_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_1.0, 8;
    %pushi/vec4 0, 0, 3;
    %assign/vec4 v0000016914e83d80_0, 0;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0000016914e850e0_0, 0;
    %jmp T_1.1;
T_1.0 ;
    %load/vec4 v0000016914e03cf0_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_1.2, 8;
    %load/vec4 v0000016914e83d80_0;
    %cmpi/e 4, 0, 3;
    %jmp/0xz  T_1.4, 4;
    %pushi/vec4 0, 0, 3;
    %assign/vec4 v0000016914e83d80_0, 0;
    %load/vec4 v0000016914e850e0_0;
    %assign/vec4 v0000016914e850e0_0, 0;
    %jmp T_1.5;
T_1.4 ;
    %load/vec4 v0000016914e83d80_0;
    %addi 1, 0, 3;
    %assign/vec4 v0000016914e83d80_0, 0;
T_1.5 ;
T_1.2 ;
T_1.1 ;
    %jmp T_1;
    .thread T_1;
    .scope S_0000016914cb6760;
T_2 ;
    %wait E_0000016914dfdf70;
    %load/vec4 v0000016914e03e30_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_2.0, 8;
    %load/vec4 v0000016914e83920_0;
    %load/vec4 v0000016914e84780_0;
    %pad/u 4;
    %ix/vec4 3;
    %ix/load 4, 0, 0; Constant delay
    %assign/vec4/a/d v0000016914e036b0, 0, 4;
T_2.0 ;
    %jmp T_2;
    .thread T_2;
    .scope S_0000016914e0db70;
T_3 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0000016914e032f0_0, 0, 1;
    %end;
    .thread T_3, $init;
    .scope S_0000016914e0db70;
T_4 ;
    %wait E_0000016914dfdf70;
    %load/vec4 v0000016914e03390_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_4.0, 8;
    %ix/load 4, 0, 0;
    %null;
    %store/obj v0000016914e03750_0;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0000016914e032f0_0, 0, 1;
    %jmp T_4.1;
T_4.0 ;
    %load/vec4 v0000016914e032f0_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_4.2, 8;
    %load/vec4 v0000016914e03110_0;
    %pad/u 32;
    %load/vec4 v0000016914e03570_0;
    %pad/u 32;
    %and;
    %load/vec4 v0000016914e03d90_0;
    %pad/u 32;
    %pushi/vec4 1, 0, 32;
    %and;
    %inv;
    %and;
    %inv;
    %cmpi/ne 0, 0, 32;
    %jmp/0xz  T_4.4, 4;
    %jmp T_4.5;
T_4.4 ;
    %vpi_call/w 4 51 "$error" {0 0 0};
T_4.5 ;
    %load/vec4 v0000016914e03d90_0;
    %load/vec4 v0000016914e03f70_0;
    %and;
    %inv;
    %flag_set/vec4 8;
    %jmp/0xz  T_4.6, 8;
    %jmp T_4.7;
T_4.6 ;
    %vpi_call/w 4 52 "$error" {0 0 0};
T_4.7 ;
    %vpi_func 4 54 "$size" 32, v0000016914e03750_0 {0 0 0};
    %pushi/vec4 0, 0, 32;
    %cmp/e;
    %flag_get/vec4 4;
    %load/vec4 v0000016914e03f70_0;
    %inv;
    %and;
    %inv;
    %flag_set/vec4 8;
    %jmp/0xz  T_4.8, 8;
    %jmp T_4.9;
T_4.8 ;
    %vpi_call/w 4 54 "$error" {0 0 0};
T_4.9 ;
    %vpi_func 4 55 "$size" 32, v0000016914e03750_0 {0 0 0};
    %pushi/vec4 5, 0, 32;
    %cmp/e;
    %flag_get/vec4 4;
    %load/vec4 v0000016914e03570_0;
    %inv;
    %and;
    %inv;
    %flag_set/vec4 8;
    %jmp/0xz  T_4.10, 8;
    %jmp T_4.11;
T_4.10 ;
    %vpi_call/w 4 55 "$error" {0 0 0};
T_4.11 ;
    %load/vec4 v0000016914e03f70_0;
    %inv;
    %flag_set/vec4 10;
    %flag_get/vec4 10;
    %jmp/0 T_4.15, 10;
    %vpi_func 4 65 "$size" 32, v0000016914e03750_0 {0 0 0};
    %pushi/vec4 0, 0, 32;
    %cmp/ne;
    %flag_get/vec4 4;
    %and;
T_4.15;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_4.14, 9;
    %load/vec4 v0000016914e031b0_0;
    %ix/load 3, 0, 0;
    %flag_set/imm 4, 0;
    %load/dar/vec4 v0000016914e03750_0;
    %cmp/ne;
    %flag_get/vec4 4;
    %and;
T_4.14;
    %inv;
    %flag_set/vec4 8;
    %jmp/0xz  T_4.12, 8;
    %jmp T_4.13;
T_4.12 ;
    %vpi_call/w 4 64 "$error" {0 0 0};
T_4.13 ;
    %load/vec4 v0000016914e03110_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_4.16, 8;
    %ix/load 4, 0, 0;
    %load/vec4 v0000016914e03430_0;
    %store/qb/v v0000016914e03750_0, 4, 8;
T_4.16 ;
    %load/vec4 v0000016914e03d90_0;
    %pushi/vec4 0, 0, 32;
    %vpi_func 4 73 "$size" 32, v0000016914e03750_0 {0 0 0};
    %cmp/s;
    %flag_get/vec4 5;
    %and;
    %flag_set/vec4 8;
    %jmp/0xz  T_4.18, 8;
    %ix/load 3, 0, 0;
    %flag_set/imm 4, 0;
    %delete/elem v0000016914e03750_0;
T_4.18 ;
    %load/vec4 v0000016914e03110_0;
    %load/vec4 v0000016914e03d90_0;
    %or;
    %flag_set/vec4 8;
    %jmp/0xz  T_4.20, 8;
    %load/vec4 v0000016914e03110_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_4.22, 8;
    %vpi_call/w 4 88 "$write", "push %h", v0000016914e03430_0 {0 0 0};
    %jmp T_4.23;
T_4.22 ;
    %vpi_call/w 4 90 "$write", "       " {0 0 0};
T_4.23 ;
    %load/vec4 v0000016914e03d90_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_4.24, 8;
    %vpi_call/w 4 93 "$write", "  pop %h", v0000016914e031b0_0 {0 0 0};
    %jmp T_4.25;
T_4.24 ;
    %vpi_call/w 4 95 "$write", "        " {0 0 0};
T_4.25 ;
    %load/vec4 v0000016914e03f70_0;
    %flag_set/vec4 8;
    %jmp/0 T_4.26, 8;
    %pushi/vec4 1701671028, 0, 32; draw_string_vec4
    %pushi/vec4 121, 0, 8; draw_string_vec4
    %concat/vec4; draw_string_vec4
    %jmp/1 T_4.27, 8;
T_4.26 ; End of true expr.
    %pushi/vec4 538976288, 0, 32; draw_string_vec4
    %pushi/vec4 32, 0, 8; draw_string_vec4
    %concat/vec4; draw_string_vec4
    %jmp/0 T_4.27, 8;
 ; End of false expr.
    %blend;
T_4.27;
    %load/vec4 v0000016914e03570_0;
    %flag_set/vec4 8;
    %jmp/0 T_4.28, 8;
    %pushi/vec4 1718971500, 0, 32; draw_string_vec4
    %jmp/1 T_4.29, 8;
T_4.28 ; End of true expr.
    %pushi/vec4 538976288, 0, 32; draw_string_vec4
    %jmp/0 T_4.29, 8;
 ; End of false expr.
    %blend;
T_4.29;
    %vpi_call/w 4 97 "$write", "  %5s %4s", S<1,vec4,u40>, S<0,vec4,u32> {2 0 0};
    %vpi_call/w 4 101 "$write", " [" {0 0 0};
    %fork t_1, S_0000016914cb65d0;
    %jmp t_0;
    .scope S_0000016914cb65d0;
t_1 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0000016914e037f0_0, 0, 32;
T_4.30 ;
    %load/vec4 v0000016914e037f0_0;
    %vpi_func 4 103 "$size" 32, v0000016914e03750_0 {0 0 0};
    %cmp/s;
    %jmp/0xz T_4.31, 5;
    %vpi_func 4 104 "$size" 32, v0000016914e03750_0 {0 0 0};
    %load/vec4 v0000016914e037f0_0;
    %sub;
    %subi 1, 0, 32;
    %ix/vec4/s 3;
    %load/dar/vec4 v0000016914e03750_0;
    %vpi_call/w 4 104 "$write", " %h", S<0,vec4,u8> {1 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0000016914e037f0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0000016914e037f0_0, 0, 32;
    %jmp T_4.30;
T_4.31 ;
    %end;
    .scope S_0000016914e0db70;
t_0 %join;
    %vpi_call/w 4 106 "$display", " ]" {0 0 0};
T_4.20 ;
T_4.2 ;
T_4.1 ;
    %jmp T_4;
    .thread T_4;
    .scope S_0000016914e04030;
T_5 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0000016914e840a0_0, 0, 1;
T_5.0 ;
    %delay 5, 0;
    %load/vec4 v0000016914e840a0_0;
    %inv;
    %store/vec4 v0000016914e840a0_0, 0, 1;
    %jmp T_5.0;
    %end;
    .thread T_5;
    .scope S_0000016914e04030;
T_6 ;
    %pushi/vec4 10000, 0, 32;
T_6.0 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_6.1, 5;
    %jmp/1 T_6.1, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_0000016914dfdf70;
    %jmp T_6.0;
T_6.1 ;
    %pop/vec4 1;
    %vpi_call/w 3 46 "$display", "Timeout!" {0 0 0};
    %vpi_call/w 3 47 "$finish" {0 0 0};
    %end;
    .thread T_6;
    .scope S_0000016914e04030;
T_7 ;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0000016914e83ba0_0, 0;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0000016914e85040_0, 0;
    %pushi/vec4 3, 0, 32;
T_7.0 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_7.1, 5;
    %jmp/1 T_7.1, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_0000016914dfdf70;
    %jmp T_7.0;
T_7.1 ;
    %pop/vec4 1;
    %pushi/vec4 1, 0, 1;
    %assign/vec4 v0000016914e85180_0, 0;
    %pushi/vec4 3, 0, 32;
T_7.2 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_7.3, 5;
    %jmp/1 T_7.3, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_0000016914dfdf70;
    %jmp T_7.2;
T_7.3 ;
    %pop/vec4 1;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0000016914e85180_0, 0;
    %vpi_call/w 3 77 "$display", "*** Fill and empty" {0 0 0};
    %pushi/vec4 1, 0, 1;
    %assign/vec4 v0000016914e83ba0_0, 0;
    %fork t_3, S_0000016914e15960;
    %jmp t_2;
    .scope S_0000016914e15960;
t_3 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0000016914e03070_0, 0, 32;
T_7.4 ;
    %load/vec4 v0000016914e03070_0;
    %cmpi/s 5, 0, 32;
    %jmp/0xz T_7.5, 5;
    %load/vec4 v0000016914e03070_0;
    %muli 16, 0, 32;
    %load/vec4 v0000016914e03070_0;
    %add;
    %pad/s 8;
    %assign/vec4 v0000016914e83880_0, 0;
    %wait E_0000016914dfdf70;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0000016914e03070_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0000016914e03070_0, 0, 32;
    %jmp T_7.4;
T_7.5 ;
    %end;
    .scope S_0000016914e04030;
t_2 %join;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0000016914e83ba0_0, 0;
    %pushi/vec4 1, 0, 1;
    %assign/vec4 v0000016914e85040_0, 0;
    %pushi/vec4 5, 0, 32;
T_7.6 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_7.7, 5;
    %jmp/1 T_7.7, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_0000016914dfdf70;
    %jmp T_7.6;
T_7.7 ;
    %pop/vec4 1;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0000016914e85040_0, 0;
    %pushi/vec4 2, 0, 32;
T_7.8 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_7.9, 5;
    %jmp/1 T_7.9, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_0000016914dfdf70;
    %jmp T_7.8;
T_7.9 ;
    %pop/vec4 1;
    %vpi_call/w 3 98 "$display", "*** Fill half and run back-to-back, then empty" {0 0 0};
    %pushi/vec4 1, 0, 1;
    %assign/vec4 v0000016914e83ba0_0, 0;
    %fork t_5, S_0000016914e15af0;
    %jmp t_4;
    .scope S_0000016914e15af0;
t_5 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0000016914e03b10_0, 0, 32;
T_7.10 ;
    %load/vec4 v0000016914e03b10_0;
    %cmpi/s 2, 0, 32;
    %jmp/0xz T_7.11, 5;
    %load/vec4 v0000016914e03b10_0;
    %muli 16, 0, 32;
    %load/vec4 v0000016914e03b10_0;
    %add;
    %pad/s 8;
    %assign/vec4 v0000016914e83880_0, 0;
    %wait E_0000016914dfdf70;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0000016914e03b10_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0000016914e03b10_0, 0, 32;
    %jmp T_7.10;
T_7.11 ;
    %end;
    .scope S_0000016914e04030;
t_4 %join;
    %pushi/vec4 1, 0, 1;
    %assign/vec4 v0000016914e85040_0, 0;
    %pushi/vec4 5, 0, 32;
T_7.12 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_7.13, 5;
    %jmp/1 T_7.13, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %fork t_7, S_0000016914e0d9e0;
    %jmp t_6;
    .scope S_0000016914e0d9e0;
t_7 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0000016914e03ed0_0, 0, 32;
T_7.14 ;
    %load/vec4 v0000016914e03ed0_0;
    %cmpi/s 5, 0, 32;
    %jmp/0xz T_7.15, 5;
    %load/vec4 v0000016914e03ed0_0;
    %muli 16, 0, 32;
    %load/vec4 v0000016914e03ed0_0;
    %add;
    %pad/s 8;
    %assign/vec4 v0000016914e83880_0, 0;
    %wait E_0000016914dfdf70;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0000016914e03ed0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0000016914e03ed0_0, 0, 32;
    %jmp T_7.14;
T_7.15 ;
    %end;
    .scope S_0000016914e04030;
t_6 %join;
    %jmp T_7.12;
T_7.13 ;
    %pop/vec4 1;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0000016914e83ba0_0, 0;
T_7.16 ;
    %wait E_0000016914dfdf70;
    %delay 1, 0;
    %load/vec4 v0000016914e84960_0;
    %inv;
    %flag_set/vec4 8;
    %jmp/1 T_7.16, 8;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0000016914e85040_0, 0;
    %pushi/vec4 2, 0, 32;
T_7.17 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_7.18, 5;
    %jmp/1 T_7.18, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_0000016914dfdf70;
    %jmp T_7.17;
T_7.18 ;
    %pop/vec4 1;
    %vpi_call/w 3 131 "$display", "*** Randomized test" {0 0 0};
    %pushi/vec4 5, 0, 32;
T_7.19 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_7.20, 5;
    %jmp/1 T_7.20, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_0000016914dfdf70;
    %jmp T_7.19;
T_7.20 ;
    %pop/vec4 1;
    %pushi/vec4 100, 0, 32;
T_7.21 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_7.22, 5;
    %jmp/1 T_7.22, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_0000016914dfdf70;
    %delay 1, 0;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0000016914e85040_0, 0;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0000016914e83ba0_0, 0;
    %pushi/vec4 1, 0, 32;
    %load/vec4 v0000016914e834c0_0;
    %pad/u 32;
    %and;
    %vpi_func 3 145 "$urandom_range" 32, 32'sb00000000000000000000000000000001, 32'sb00000000000000000000000001100100 {0 0 0};
    %cmpi/u 40, 0, 32;
    %flag_get/vec4 4;
    %flag_get/vec4 5;
    %or;
    %pad/u 32;
    %and;
    %cmpi/ne 0, 0, 32;
    %jmp/0xz  T_7.23, 4;
    %pushi/vec4 1, 0, 1;
    %assign/vec4 v0000016914e85040_0, 0;
    %pushi/vec4 1, 0, 1;
    %assign/vec4 v0000016914e83ba0_0, 0;
    %vpi_func 3 150 "$urandom" 32 {0 0 0};
    %pad/u 8;
    %assign/vec4 v0000016914e83880_0, 0;
T_7.23 ;
    %load/vec4 v0000016914e84960_0;
    %inv;
    %vpi_func 3 153 "$urandom_range" 32, 32'sb00000000000000000000000000000001, 32'sb00000000000000000000000001100100 {0 0 0};
    %cmpi/u 50, 0, 32;
    %flag_get/vec4 4;
    %flag_get/vec4 5;
    %or;
    %and;
    %flag_set/vec4 8;
    %jmp/0xz  T_7.25, 8;
    %pushi/vec4 1, 0, 1;
    %assign/vec4 v0000016914e85040_0, 0;
T_7.25 ;
    %load/vec4 v0000016914e834c0_0;
    %inv;
    %vpi_func 3 156 "$urandom_range" 32, 32'sb00000000000000000000000000000001, 32'sb00000000000000000000000001100100 {0 0 0};
    %cmpi/u 60, 0, 32;
    %flag_get/vec4 4;
    %flag_get/vec4 5;
    %or;
    %and;
    %flag_set/vec4 8;
    %jmp/0xz  T_7.27, 8;
    %pushi/vec4 1, 0, 1;
    %assign/vec4 v0000016914e83ba0_0, 0;
    %vpi_func 3 159 "$urandom" 32 {0 0 0};
    %pad/u 8;
    %assign/vec4 v0000016914e83880_0, 0;
T_7.27 ;
    %jmp T_7.21;
T_7.22 ;
    %pop/vec4 1;
    %vpi_call/w 3 165 "$display", "%s PASS", "./tb.sv" {0 0 0};
    %vpi_call/w 3 166 "$finish" {0 0 0};
    %end;
    .thread T_7;
# The file index is used to find the file name in the following table.
:file_names 6;
    "N/A";
    "<interactive>";
    "-";
    "./tb.sv";
    "./fifo_monitor.sv";
    "./flip_flop_fifo_empty_full_optimized.sv";
